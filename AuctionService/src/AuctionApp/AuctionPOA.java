package AuctionApp;


/**
* AuctionApp/AuctionPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from Auction.idl
* Monday, February 27, 2017 6:14:12 PM CST
*/

public abstract class AuctionPOA extends org.omg.PortableServer.Servant
 implements AuctionApp.AuctionOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("offerItem", new java.lang.Integer (0));
    _methods.put ("getNextUserID", new java.lang.Integer (1));
    _methods.put ("sell", new java.lang.Integer (2));
    _methods.put ("bid", new java.lang.Integer (3));
    _methods.put ("viewHighBidder", new java.lang.Integer (4));
    _methods.put ("viewBidStatus", new java.lang.Integer (5));
    _methods.put ("isActive", new java.lang.Integer (6));
    _methods.put ("viewAuctionStatus", new java.lang.Integer (7));
    _methods.put ("shutdown", new java.lang.Integer (8));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // AuctionApp/Auction/offerItem
       {
         int uID = in.read_long ();
         String description = in.read_string ();
         float initialPrice = in.read_float ();
         org.omg.CORBA.StringHolder status = new org.omg.CORBA.StringHolder ();
         this.offerItem (uID, description, initialPrice, status);
         out = $rh.createReply();
         out.write_string (status.value);
         break;
       }

       case 1:  // AuctionApp/Auction/getNextUserID
       {
         int $result = (int)0;
         $result = this.getNextUserID ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 2:  // AuctionApp/Auction/sell
       {
         int uID = in.read_long ();
         org.omg.CORBA.StringHolder status = new org.omg.CORBA.StringHolder ();
         this.sell (uID, status);
         out = $rh.createReply();
         out.write_string (status.value);
         break;
       }

       case 3:  // AuctionApp/Auction/bid
       {
         int uID = in.read_long ();
         float bidPrice = in.read_float ();
         org.omg.CORBA.StringHolder status = new org.omg.CORBA.StringHolder ();
         this.bid (uID, bidPrice, status);
         out = $rh.createReply();
         out.write_string (status.value);
         break;
       }

       case 4:  // AuctionApp/Auction/viewHighBidder
       {
         int $result = (int)0;
         $result = this.viewHighBidder ();
         out = $rh.createReply();
         out.write_long ($result);
         break;
       }

       case 5:  // AuctionApp/Auction/viewBidStatus
       {
         int uID = in.read_long ();
         org.omg.CORBA.StringHolder status = new org.omg.CORBA.StringHolder ();
         boolean $result = false;
         $result = this.viewBidStatus (uID, status);
         out = $rh.createReply();
         out.write_boolean ($result);
         out.write_string (status.value);
         break;
       }

       case 6:  // AuctionApp/Auction/isActive
       {
         boolean $result = false;
         $result = this.isActive ();
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 7:  // AuctionApp/Auction/viewAuctionStatus
       {
         String $result = null;
         $result = this.viewAuctionStatus ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 8:  // AuctionApp/Auction/shutdown
       {
         this.shutdown ();
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:AuctionApp/Auction:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Auction _this() 
  {
    return AuctionHelper.narrow(
    super._this_object());
  }

  public Auction _this(org.omg.CORBA.ORB orb) 
  {
    return AuctionHelper.narrow(
    super._this_object(orb));
  }


} // class AuctionPOA
